
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВидЦены      = Параметры.ВидЦены;
	ДатаОстатков = Параметры.ДатаОстатков;
	Склад        = Параметры.Склад;
	Организация  = Параметры.Организация;
	
	Список.Параметры.УстановитьЗначениеПараметра("Период",ДатаОстатков+1);
	Список.Параметры.УстановитьЗначениеПараметра("ВидЦены",ВидЦены);
	
КонецПроцедуры

&НаСервере
Функция ПоместитьТоварыВХранилище() 	
	
	Товары = Корзина.Выгрузить();
	АдресТоваровВХранилище = ПоместитьВоВременноеХранилище(Товары, УникальныйИдентификатор);
	Возврат АдресТоваровВХранилище;
	
КонецФункции
&НаКлиенте
Процедура ПриЗакрытии()
	           	
	Если Корзина.Количество() > 0 Тогда
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьТоварыВопросЗавершение", ЭтотОбъект); 
		ТекстВопроса = "Перенести выбранные товары в документ?"; 
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры 
&НаКлиенте 
Процедура ЗаполнитьТоварыВопросЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	Если Результат = КодВозвратаДиалога.Да Тогда 
		АдресТоваровВХранилище = ПоместитьТоварыВХранилище();
		Структура = Новый Структура("АдресТоваровВХранилище", АдресТоваровВХранилище);
		ОповеститьОВыборе(Структура); 		
	Иначе	
		Возврат;   
	КонецЕсли; 
КонецПроцедуры


&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаТаблицыНоменклатуры = Элемент.ТекущиеДанные;
	Если СтрокаТаблицыНоменклатуры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПодборТекущаяНоменклатура = СтрокаТаблицыНоменклатуры;
	
	Если Корзина.Количество()>0 и Корзина[Корзина.Количество()-1].Номенклатура = ПодборТекущаяНоменклатура.Ссылка Тогда
		Корзина[Корзина.Количество()-1].Количество = Корзина[Корзина.Количество()-1].Количество + 1;
	Иначе
		НоваяСтрока = Корзина.Добавить(); 
		НоваяСтрока.Номенклатура = СтрокаТаблицыНоменклатуры.Ссылка;
		НоваяСтрока.Количество   = 1;
		НоваяСтрока.Цена   		 = СтрокаТаблицыНоменклатуры.Цена;
		НоваяСтрока.ВидЦены   	 = ВидЦены; 
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВидЦеныПриОтбора(Элемент)
	Список.Параметры.УстановитьЗначениеПараметра("ВидЦены",ВидЦены);
	Список.Параметры.УстановитьЗначениеПараметра("Период",ДатаОстатков);
	//Список.Параметры.УстановитьЗначениеПараметра("Склад",Склад);
	//Список.Параметры.УстановитьЗначениеПараметра("Организация",Организация);
	ИнформацияОТоваре.Параметры.УстановитьЗначениеПараметра("ВидЦены",ВидЦены);
	ИнформацияОТоваре.Параметры.УстановитьЗначениеПараметра("Период",ДатаОстатков);
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ИнформацияОТоваре.Параметры.УстановитьЗначениеПараметра("Номенклатура",Элемент.ТекущиеДанные.Ссылка);
	ИнформацияОТоваре.Параметры.УстановитьЗначениеПараметра("ВидЦены",ВидЦены);
	//ИнформацияОТоваре.Параметры.УстановитьЗначениеПараметра("Организация",Организация);
	//ИнформацияОТоваре.Параметры.УстановитьЗначениеПараметра("Склад",Склад);
	ИнформацияОТоваре.Параметры.УстановитьЗначениеПараметра("Период",КонецДня(ДатаОстатков)+1);
КонецПроцедуры

 
