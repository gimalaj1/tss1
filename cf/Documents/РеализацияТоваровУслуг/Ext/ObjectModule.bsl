
Процедура ОбработкаПроведения(Отказ, Режим)
	
	//Свернем все товары чтобы избежать задвоенных строк
	ТЗТоваров = Товары.Выгрузить(,"Партия, Номенклатура,Количество,Сумма,Цена");
	ТЗТоваров.Свернуть("Партия, Номенклатура,Цена","Количество,Сумма");   
	
	// регистр ПартииТоваров Расход
	Движения.ПартииТоваров.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из ТЗТоваров Цикл
		
		//Список Партий с остатками в Таблицу значений
		СписокОстатковПартий = Справочники.Партии.ПолучитьСписокОстатковПартий(ТекСтрокаТовары.Номенклатура,Дата,Склад,Организация,ТекСтрокаТовары.Партия);
		НеобходимыйОстаток   = ТекСтрокаТовары.Количество;
		
		Для Каждого СтрокаПартии из СписокОстатковПартий Цикл
			
			Если НеобходимыйОстаток = 0 Тогда
				Прервать;  //Товар распределился по партиям
			КонецЕсли;  			
			
			Движение = Движения.ПартииТоваров.Добавить();
			Движение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
			Движение.Период 		= Дата;
			Движение.Номенклатура 	= ТекСтрокаТовары.Номенклатура;
			Движение.Склад 			= Склад;
			Движение.Организация 	= Организация;
			
			Движение.Партия 		= СтрокаПартии.Партия;
			
			Если НеобходимыйОстаток <= СтрокаПартии.КоличествоОстаток Тогда  //ИЛИ СтрокаПартии.КоличествоОстаток < 0
				Движение.Количество 	= НеобходимыйОстаток;
				Движение.СуммаПродажи	= ТекСтрокаТовары.Цена * Движение.Количество;
				Движение.Сумма			= СтрокаПартии.Партия.ЗакупочнаяЦена * Движение.Количество;
				
				НеобходимыйОстаток 		= НеобходимыйОстаток - Движение.Количество;
				
			ИначеЕсли НеобходимыйОстаток > СтрокаПартии.КоличествоОстаток Тогда
				
				Движение.Количество 	= СтрокаПартии.КоличествоОстаток;
				Движение.СуммаПродажи	= ТекСтрокаТовары.Цена * Движение.Количество;
				Движение.Сумма			= СтрокаПартии.Партия.ЗакупочнаяЦена * Движение.Количество;
				
				НеобходимыйОстаток 		= НеобходимыйОстаток - Движение.Количество;
			КонецЕсли;		
		КонецЦикла;   		
		
		Если НеобходимыйОстаток > 0 Тогда
			
			Если Организация.КонтролироватьОстатки Тогда
				Сообщить("" +Ссылка +Символы.ПС+
				"Нехватает: " +НеобходимыйОстаток+ " " +ТекСтрокаТовары.Номенклатура+ ", Склад: " +Склад+ ", Организация: " +Организация);	
				Отказ = Истина;
			Иначе //Если нехватило остатков, то берем из последней партии (в минус)
				Движение.Количество 	= Движение.Количество + НеобходимыйОстаток;
				Движение.СуммаПродажи	= ТекСтрокаТовары.Сумма / ТекСтрокаТовары.Количество * Движение.Количество;
				Движение.Сумма			= СтрокаПартии.Партия.ЗакупочнаяЦена * Движение.Количество;
			КонецЕсли;		
		КонецЕсли;  		
	КонецЦикла;
	
	// регистр ДолгиКонтрагентов Приход (они должны)
	Движения.ДолгиКонтрагентов.Записывать = Истина;
	Движение = Движения.ДолгиКонтрагентов.Добавить();
	Движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
	Движение.Период 		= Дата;
	Движение.Организация 	= Организация;
	Движение.Контрагент 	= Контрагент;
	Движение.Договор 		= ДоговорСКонтрагентом;
	Движение.Сумма 			= Товары.Итог("Сумма");

КонецПроцедуры


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		// Заполнение шапки
		Организация = ДанныеЗаполнения.Организация;
		Склад = ДанныеЗаполнения.Склад;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Количество 		= ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура 	= ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.Сумма 			= ТекСтрокаТовары.Сумма;
			НоваяСтрока.Цена 			= ТекСтрокаТовары.Цена;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если СуммаДокумента <> Товары.Итог("Сумма") Тогда
		СуммаДокумента = Товары.Итог("Сумма");
	КонецЕсли;

КонецПроцедуры
