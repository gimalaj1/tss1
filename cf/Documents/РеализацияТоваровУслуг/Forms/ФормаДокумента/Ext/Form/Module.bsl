
/////////////////////////--==Партии==--////////////////////////////////////////////////
&НаКлиенте
Процедура ТоварыПартияОткрытие(Элемент, СтандартнаяОбработка) 	      	
	СтандартнаяОбработка = Ложь;	
	ПараметрыФормы = СформироватьПараметрыФормы(Элементы.Товары.ТекущиеДанные);  
	ОткрытьФорму("Справочник.Партии.Форма.ФормаЭлементаОткрыть", ПараметрыФормы, Элемент);	
КонецПроцедуры 
&НаКлиенте
Функция СформироватьПараметрыФормы(ТекСтр)
	
	ЗначенияОтборов = Новый Структура;
	ЗначенияОтборов.Вставить("Владелец", ТекСтр.Номенклатура);
	ЗначенияОтборов.Вставить("Организация", Объект.Организация);
	ЗначенияОтборов.Вставить("Склад", Объект.Склад);	
	ЗначенияОтборов.Вставить("ДатаОстатков", Объект.Дата);
	
	ПараметрыФормы = Новый Структура("Ключ", ТекСтр.Партия);
	ПараметрыФормы.Вставить("Отбор", ЗначенияОтборов);

	Возврат ПараметрыФормы;
	
КонецФункции 
&НаКлиенте
Процедура ДвиженияПартииТоваровПартияОткрытие(Элемент, СтандартнаяОбработка) 
	СтандартнаяОбработка = Ложь;	
	ПараметрыФормы = СформироватьПараметрыФормы(Элементы.ДвиженияПартииТоваров.ТекущиеДанные);
	ОткрытьФорму("Справочник.Партии.Форма.ФормаЭлементаОткрыть", ПараметрыФормы, Элемент);	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПартияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	    	
	СтандартнаяОбработка = Ложь;
	
	ТекСтр = Элементы.Товары.ТекущиеДанные;
	
	ЗначенияОтборов = Новый Структура;
	ЗначенияОтборов.Вставить("Владелец", ТекСтр.Номенклатура);
	ЗначенияОтборов.Вставить("Организация", Объект.Организация);
	ЗначенияОтборов.Вставить("Склад", Объект.Склад);  	
	ЗначенияОтборов.Вставить("ДатаОстатков", Объект.Дата);

	ПараметрыФормы = Новый Структура("Отбор", ЗначенияОтборов);
	
	ОткрытьФорму("Справочник.Партии.Форма.ФормаВыбора", ПараметрыФормы, Элемент);
	
КонецПроцедуры
/////////////////////////--==Партии==--////////////////////////////////////////////////

&НаКлиенте
Процедура ВидЦеныПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	Элементы.Товары.ТекущиеДанные.Сумма = Элементы.Товары.ТекущиеДанные.Количество * Элементы.Товары.ТекущиеДанные.Цена;
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)
	Элементы.Товары.ТекущиеДанные.Цена = Элементы.Товары.ТекущиеДанные.Сумма / Элементы.Товары.ТекущиеДанные.Количество;
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма");
КонецПроцедуры


&НаКлиенте
Процедура ПодобратьТовары(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДатаОстатков", КонецМесяца(ТекущаяДата()));	
	ПараметрыФормы.Вставить("Организация", Объект.Организация);
	ПараметрыФормы.Вставить("Склад", Объект.Склад);
	ПараметрыФормы.Вставить("ВидЦены", Объект.ВидЦены);	
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаПодбора", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);

КонецПроцедуры 
&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ОбработкаВыбораПодборНаКлиенте(ВыбранноеЗначение);
	
	Если Окно <> Неопределено Тогда
		Окно.Активизировать();
	КонецЕсли;
	
КонецПроцедуры 
&НаСервере
Процедура ОбработкаВыбораПодборНаКлиенте(ВыбранноеЗначение)
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
	
	Для Каждого СтрокаТовара Из ТаблицаТоваров Цикл 		
		ТекущаяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара, "Номенклатура, Цена, Количество");
		ТекущаяСтрока.Сумма = ТекущаяСтрока.Количество * ТекущаяСтрока.Цена;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Копирование Тогда
		Элемент.ТекущиеДанные.Партия = Неопределено;
	КонецЕсли;	
	
	//Если Элемент.ТекущийЭлемент.Заголовок = "Партия" Тогда
	//	ТоварыПартияНачалоВыбора(Элемент, Неопределено, Ложь)
	//КонецЕсли;

КонецПроцедуры

