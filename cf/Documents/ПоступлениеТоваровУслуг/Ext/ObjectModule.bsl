
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Справочники.Партии.ОбновитьПартию(Ссылка,Отказ); 
	
	// регистр ПартииТоваров Приход
	Движения.ПартииТоваров.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ПартииТоваров.Добавить();
		Движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
		Движение.Период 		= Дата;
		Движение.Номенклатура 	= ТекСтрокаТовары.Номенклатура;
		Движение.Склад 			= Склад;
		Движение.Организация 	= Организация;
		Движение.Партия 		= ТекСтрокаТовары.Партия;
		Движение.Количество 	= ТекСтрокаТовары.Количество;
		Движение.Сумма 			= ТекСтрокаТовары.Сумма;
		Движение.СуммаНДС 		= ТекСтрокаТовары.СуммаНДС;
	КонецЦикла;
	
	// регистр ДолгиКонтрагентов Расход (мы должны)
	Движения.ДолгиКонтрагентов.Записывать = Истина;
	Движение = Движения.ДолгиКонтрагентов.Добавить();
	Движение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
	Движение.Период 		= Дата;
	Движение.Организация 	= Организация;
	Движение.Контрагент 	= Контрагент;
	Движение.Договор 		= ДоговорСКонтрагентом;
	Движение.Сумма 			= Товары.Итог("Сумма");
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если СуммаДокумента <> Товары.Итог("Сумма") Тогда    
		СуммаДокумента = Товары.Итог("Сумма");
	КонецЕсли;
	
	//Если ЭтоНовый() Тогда  
	//	УникИдент = Новый УникальныйИдентификатор();  
	//	сс = Документы.ПоступлениеТМЦ.ПолучитьСсылку(УникИдент);
	//	УстановитьСсылкуНового(сс);
	//Иначе
	//	сс = Ссылка;
	//КонецЕсли;	
		
	Справочники.Партии.УдалениеИлиОтменаУделенияПартийДокумента(Ссылка,ПометкаУдаления);		
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)	
	
	Для Каждого Стр из Товары Цикл 		
		Стр.Партия	= Неопределено;
		
		Если ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Стр.Партия = Справочники.Партии.СоздатьНовуюПартию(Стр.Номенклатура).Ссылка;
		КонецЕсли;
		
	КонецЦикла;		
КонецПроцедуры

