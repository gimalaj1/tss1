
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТМЦ") Тогда
		
		// Заполнение шапки
		Контрагент 	= ДанныеЗаполнения.Контрагент;
		Организация = ДанныеЗаполнения.Организация;
		Склад 		= ДанныеЗаполнения.Склад;
		Основание	= ДанныеЗаполнения.Ссылка;
		
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Количество 		= ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура 	= ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.СуммаПродажи 	= ТекСтрокаТовары.Сумма;
			НоваяСтрока.Цена 			= ТекСтрокаТовары.Цена;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры 


Функция НайтиИлиСоздатьПартию(ТекСтрокаТовары)
			
	М = Новый Массив;
	
	//Ищем партию текущего документа текущей строки
	СписокПартий = Справочники.Партии.НайтиПартию(ТекСтрокаТовары.Номенклатура,Ссылка);
	Если СписокПартий.Количество() > 1 Тогда
		Сообщить("Обнаружено " +СписокПартий.Количество()+ " партии по отбору: " +ТекСтрокаТовары.Номенклатура+ " , " +Ссылка);
	ИначеЕсли СписокПартий.Количество() = 1 Тогда		
		
		Если СписокПартий[0].Ссылка.ЗакупочнаяСумма <> ТекСтрокаТовары.СуммаСебестоимости или 
			СписокПартий[0].Ссылка.ЗакупочноеКоличество <> ТекСтрокаТовары.Количество Тогда
			//Исправляем Партию
			ОбъектПартия = СписокПартий[0].Ссылка.ПолучитьОбъект();
			ОбъектПартия.ЗакупочнаяСумма = ТекСтрокаТовары.СуммаСебестоимости;
			ОбъектПартия.ЗакупочноеКоличество = ТекСтрокаТовары.Количество;
			ОбъектПартия.ЗакупочнаяЦена = ТекСтрокаТовары.СуммаСебестоимости / ТекСтрокаТовары.Количество;
			
			Попытка
				ОбъектПартия.Записать();
			Исключение
				Сообщить("Не удалось поправить партию " +ОбъектПартия+ " приходный документ: " +ОбъектПартия.ПриходныйДокумент);
			КонецПопытки;
			
		КонецЕсли;
		
		Стр = Новый Структура;
		Стр.Вставить("Партия",СписокПартий[0].Ссылка);
		Стр.Вставить("КоличествоРасход",ТекСтрокаТовары.Количество);
		М.Добавить(Стр);
		
		Возврат М;  		
	КонецЕсли;

	
	
		
	//Если Партии.Количество() = 0 Партии отсутствуют  СОЗДАЕМ ПАРТИЮ					
	НоваяПартия = Справочники.Партии.СоздатьЭлемент();
	НоваяПартия.Владелец 			= ТекСтрокаТовары.Номенклатура;
	НоваяПартия.ПриходныйДокумент 	= Ссылка;
	
	Если НЕ ЗначениеЗаполнено(Основание) Тогда
		
		НоваяПартия.ЗакупочнаяСумма     = ТекСтрокаТовары.СуммаСебестоимости;
		НоваяПартия.ЗакупочноеКоличество= ТекСтрокаТовары.Количество; 
		НоваяПартия.ЗакупочнаяЦена 		= ТекСтрокаТовары.СуммаСебестоимости / ТекСтрокаТовары.Количество; 
	Иначе
		//Ищем партию по документу основания
		СтруктураЗакупа = ПолучитьСтруктуруЗакупаИзПартииДокументаОснования(ТекСтрокаТовары.Номенклатура,Основание);  
		НоваяПартия.ЗакупочнаяСумма     = СтруктураЗакупа.СуммаСебестоимости;
		НоваяПартия.ЗакупочноеКоличество= СтруктураЗакупа.КоличествоСебестоимости; 
		НоваяПартия.ЗакупочнаяЦена 		= СтруктураЗакупа.СуммаСебестоимости/СтруктураЗакупа.КоличествоСебестоимости; 
	КонецЕсли;
	
	Попытка
		НоваяПартия.Записать(); 			
		
		Стр = Новый Структура;
		Стр.Вставить("Партия",НоваяПартия.Ссылка);
		Стр.Вставить("КоличествоРасход",ТекСтрокаТовары.Количество);
		М.Добавить(Стр);
		
		Возврат М;
		
	Исключение
		Сообщить("Не создана партия по отбору: " +ТекСтрокаТовары.Номенклатура+ " , " +Ссылка+ " "+ ОписаниеОшибки());
	КонецПопытки; 
	
КонецФункции
Функция ПолучитьСтруктуруЗакупаИзПартииДокументаОснования(Номенклатура, ДокументОснования)
	
	С = Новый Структура;
	
	//Ищем партию по документу основания
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПартииТоваров.Количество,
		|	ПартииТоваров.Сумма
		|ИЗ
		|	РегистрНакопления.ПартииТоваров КАК ПартииТоваров
		|ГДЕ
		|	ПартииТоваров.Регистратор = &Регистратор
		|	И ПартииТоваров.Номенклатура = &Номенклатура"; 	
	Запрос.УстановитьПараметр("Регистратор", ДокументОснования);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();   	
	
	Если РезультатЗапроса.Количество() = 1 Тогда
		С.Вставить("СуммаСебестоимости",РезультатЗапроса[0].Сумма);
		С.Вставить("КоличествоСебестоимости",РезультатЗапроса[0].Количество);
		Возврат С;
	Иначе //РезультатЗапроса.Количество() = 0
		Сообщить("Отсутсвуют движения документа основания: "+ДокументОснования+ " - Документ не проведен!");
		Возврат 0;
	КонецЕсли;    	
	
КонецФункции 





Процедура ОбработкаПроведения(Отказ, Режим)
	
	//Свернем все товары чтобы избежать задвоенных строк
	ТЗТоваров = Товары.Выгрузить(,"Номенклатура,Количество,СуммаПродажи,СуммаСебестоимости");
	ТЗТоваров.Свернуть("Номенклатура","Количество,СуммаПродажи,СуммаСебестоимости");
	
	// регистр ПартииТоваров Приход
	Движения.ПартииТоваров.Записывать = Истина;
	
	Для Каждого ТекСтрокаТовары Из ТЗТоваров Цикл
		
		Если НЕ ЗначениеЗаполнено(ТекСтрокаТовары.СуммаСебестоимости) и НЕ ЗначениеЗаполнено(Основание) Тогда
			Отказ = Истина;
			Сообщить("У " +ТекСтрокаТовары.Номенклатура+ " не указана себестоимость!");
		КонецЕсли;
				
		Если ЗначениеЗаполнено(Основание) Тогда 
			СтруктураИзПартий = НайтиПартиюТовара(ТекСтрокаТовары.Номенклатура,Основание);
			Отказ 			  = ПроверкаКоличестваРеализацииИВозврата(СтруктураИзПартий,ТекСтрокаТовары,Основание);
		Иначе
			СтруктураИзПартий = НайтиИлиСоздатьПартию(ТекСтрокаТовары);
		КонецЕсли;
		
		
		НеобходимоеКоличество = ТекСтрокаТовары.Количество;
		Для Каждого СтрПартии Из СтруктураИзПартий Цикл
			
			Если НеобходимоеКоличество = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Движение = Движения.ПартииТоваров.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период 		= Дата;
			Движение.Организация 	= Организация;
			Движение.Склад 			= Склад;
			Движение.Номенклатура 	= ТекСтрокаТовары.Номенклатура;
			Движение.Партия 		= СтрПартии.Партия;
						
			Если НеобходимоеКоличество >= СтрПартии.КоличествоРасход Тогда
				Движение.Количество = -СтрПартии.КоличествоРасход;
				НеобходимоеКоличество = НеобходимоеКоличество - Движение.Количество;
			ИначеЕсли НеобходимоеКоличество < СтрПартии.КоличествоРасход Тогда
				Движение.Количество = -ТекСтрокаТовары.Количество;
				НеобходимоеКоличество = 0;
			КонецЕсли;
			
			Движение.СуммаПродажи 	= ТекСтрокаТовары.СуммаПродажи / ТекСтрокаТовары.Количество * Движение.Количество;
			Движение.Сумма 			= СтрПартии.Партия.ЗакупочнаяЦена * Движение.Количество;
			
		КонецЦикла;
		
	КонецЦикла;

	// регистр ДолгиКонтрагентов Расход
	Движения.ДолгиКонтрагентов.Записывать = Истина;
	Движение = Движения.ДолгиКонтрагентов.Добавить();
	Движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
	Движение.Период 		= Дата;
	Движение.Организация 	= Организация;
	Движение.Контрагент 	= Контрагент;
	Движение.Договор 		= ДоговорСКонтрагентом;
	Движение.Сумма 			= -Товары.Итог("СуммаПродажи");

КонецПроцедуры
Функция НайтиПартиюТовара(Номенклатура,ДокументОснования)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПартииТоваровОбороты.Партия,
		|	ПартииТоваровОбороты.КоличествоРасход
		|ИЗ
		|	РегистрНакопления.ПартииТоваров.Обороты(, , Регистратор, ) КАК ПартииТоваровОбороты
		|ГДЕ
		|	ПартииТоваровОбороты.Регистратор = &Регистратор
		|	И ПартииТоваровОбороты.Номенклатура = &Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПартииТоваровОбороты.КоличествоРасход УБЫВ
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Регистратор", ДокументОснования);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	ТЗПартий = Запрос.Выполнить().Выгрузить();      	
	
	М = Новый Массив; 	
	
	Если ТЗПартий.Количество() = 1 Тогда
		
		Стр = Новый Структура;
		Стр.Вставить("Партия",ТЗПартий[0].Партия);
		Стр.Вставить("КоличествоРасход",ТЗПартий[0].КоличествоРасход);
		М.Добавить(Стр);
		Возврат М;
		
	ИначеЕсли ТЗПартий.Количество() > 1 Тогда
		
		Для Каждого СтрПартии из ТЗПартий Цикл
			Стр = Новый Структура;
			Стр.Вставить("Партия",СтрПартии.Партия);
			Стр.Вставить("КоличествоРасход",СтрПартии.КоличествоРасход);
			М.Добавить(Стр);
		КонецЦикла;
		
		Возврат М;	
		
	Иначе 
		Возврат М;		
	КонецЕсли; 
	
КонецФункции
Функция ПроверкаКоличестваРеализацииИВозврата(СтруктураИзПартий,ТекСтрокаТовары,ДокументОснования)
	
	НеобходимоеКоличество = ТекСтрокаТовары.Количество;
	
	УжеОформленоДругимВозвратомОтКлиента = КоличествоУжеОформленногоРанееВозвратаОтКлиента(ТекСтрокаТовары.Номенклатура,ДокументОснования);
	КоличествоУжеОформленоДругимВозвратомОтКлиента = УжеОформленоДругимВозвратомОтКлиента.Итог("Количество");
	
	Сч = 0;
	
	Для Каждого Стр из СтруктураИзПартий Цикл		
		Сч = Сч + Стр.КоличествоРасход;		
	КонецЦикла;
	
	Если НеобходимоеКоличество > (Сч-КоличествоУжеОформленоДругимВозвратомОтКлиента) Тогда
		
		Если ЗначениеЗаполнено(КоличествоУжеОформленоДругимВозвратомОтКлиента) Тогда
			Сообщить("Уже возвращено " +КоличествоУжеОформленоДругимВозвратомОтКлиента+ " " +ТекСтрокаТовары.Номенклатура+ " из требуемых " +НеобходимоеКоличество);
			Для Каждого Стр из УжеОформленоДругимВозвратомОтКлиента Цикл
				Сообщить("Уже возвращено " +Стр.Количество+ " " +ТекСтрокаТовары.Номенклатура.ЕдиницаИзмерения+ " документом: " +Стр.Ссылка);
			КонецЦикла;
		Иначе
			Сообщить("Возвращается больше чем указано в документе основания на " +Строка((НеобходимоеКоличество-Сч)) +" !!! Номенклатура: " +ТекСтрокаТовары.Номенклатура+ " указано: " +НеобходимоеКоличество+ ", а в реализации: " +Сч);
		КонецЕсли;
		
		Возврат Истина;
		
	Иначе       		
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции
Функция КоличествоУжеОформленногоРанееВозвратаОтКлиента(Номенклатура,ДокументОснования)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВозвратОтКлиентаТовары.Количество КАК Количество,
		|	ВозвратОтКлиентаТовары.Ссылка,
		|	ВозвратОтКлиентаТовары.Номенклатура
		|ИЗ
		|	Документ.ВозвратОтКлиента.Товары КАК ВозвратОтКлиентаТовары
		|ГДЕ
		|	ВозвратОтКлиентаТовары.Ссылка.Основание = &Основание
		|	И ВозвратОтКлиентаТовары.Номенклатура = &Номенклатура
		|	И ВозвратОтКлиентаТовары.Ссылка.Проведен = ИСТИНА
		|	И ВозвратОтКлиентаТовары.Ссылка <> &Ссылка";	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Основание", ДокументОснования);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	РезультатЗапроса.Свернуть("Номенклатура,Ссылка","Количество");
	
	//М = Новый Массив;
	//С = Новый Структура;
	//
	//Если РезультатЗапроса.Количество() = 0 Тогда
	//	
	//	С.Вставить("Количество",0);
	//	С.Вставить("Документ",Документы.ВозвратОтКлиента.ПустаяСсылка());
	//	М.Добавить(с);
	//	Возврат М;
	//ИначеЕсли РезультатЗапроса.Количество() = 1 Тогда  		
	//	
	//	С.Вставить("Количество",РезультатЗапроса[0].Количество);
	//	С.Вставить("Документ",РезультатЗапроса[0].Ссылка);
	//	М.Добавить(С);
	//	Возврат М;
	//Иначе
	//	
	//	Для Каждого Стр из РезультатЗапроса Цикл
	//		С.Вставить("Количество",РезультатЗапроса[0].Количество);
	//		С.Вставить("Документ",РезультатЗапроса[0].Ссылка);
	//		М.Добавить(С);
	//	КонецЦикла;
	//	Возврат М;
	//КонецЕсли;
	
	Возврат РезультатЗапроса;
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если СуммаДокумента <> Товары.Итог("СуммаПродажи") Тогда
		СуммаДокумента = Товары.Итог("СуммаПродажи");
	КонецЕсли;
КонецПроцедуры


